-- MySQL Script generated by MySQL Workbench
-- 12/18/17 22:54:12
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema eventsDevDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema eventsDevDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `eventsDevDB` DEFAULT CHARACTER SET utf8 ;
USE `eventsDevDB` ;

-- -----------------------------------------------------
-- Table `eventsDevDB`.`ACCOUNT_TYPE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eventsDevDB`.account_type ;

CREATE TABLE IF NOT EXISTS `eventsDevDB`.`ACCOUNT_TYPE` (
  `Account_type_id` INT NOT NULL,
  `Account_name` VARCHAR(45) NULL,
  PRIMARY KEY (`Account_type_id`),
  UNIQUE INDEX `Account_name_UNIQUE` (`Account_name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eventsDevDB`.`CITY`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eventsDevDB`.city ;

CREATE TABLE IF NOT EXISTS `eventsDevDB`.`CITY` (
  `City_id` INT NOT NULL,
  `City_name` VARCHAR(45) NULL,
  PRIMARY KEY (`City_id`),
  UNIQUE INDEX `City_name_UNIQUE` (`City_name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eventsDevDB`.`USER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eventsDevDB`.user ;

CREATE TABLE IF NOT EXISTS `eventsDevDB`.`USER` (
  `User_id` INT NOT NULL,
  `Email` VARCHAR(45) NULL,
  `Enc_pass` VARCHAR(45) NULL,
  `Login` VARCHAR(45) NULL,
  `Adress` VARCHAR(45) NULL,
  `Credibility_points` INT NULL,
  `City_id` INT NOT NULL,
  `Account_type_id` INT NOT NULL,
  PRIMARY KEY (`User_id`),
  UNIQUE INDEX `Email_UNIQUE` (`Email` ASC),
  INDEX `fk_User_City1_idx` (`City_id` ASC),
  INDEX `fk_User_ACCOUNT_TYPE1_idx` (`Account_type_id` ASC),
  CONSTRAINT `fk_User_City1`
    FOREIGN KEY (`City_id`)
    REFERENCES `eventsDevDB`.city (`City_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_ACCOUNT_TYPE1`
    FOREIGN KEY (`Account_type_id`)
    REFERENCES `eventsDevDB`.account_type (`Account_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eventsDevDB`.`EVENT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eventsDevDB`.event ;

CREATE TABLE IF NOT EXISTS `eventsDevDB`.`EVENT` (
  `Event_id` INT NOT NULL,
  `Event_name` VARCHAR(200) NOT NULL,
  `Start_date` DATE NOT NULL,
  `End_date` DATE NOT NULL,
  `Contestants_number` INT NULL,
  `Position` INT NULL,
  `Radius` INT NULL,
  `Web_page` VARCHAR(45) NULL,
  `Description` BLOB NULL,
  PRIMARY KEY (`Event_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eventsDevDB`.`CITY_has_EVENT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eventsDevDB`.city_has_event ;

CREATE TABLE IF NOT EXISTS `eventsDevDB`.`CITY_has_EVENT` (
  `City_has_event_id` INT NOT NULL,
  `City_id` INT NOT NULL,
  `Event_id` INT NOT NULL,
  PRIMARY KEY (`City_has_event_id`),
  INDEX `fk_CITY_has_EVENT_EVENT1_idx` (`Event_id` ASC),
  INDEX `fk_CITY_has_EVENT_CITY1_idx` (`City_id` ASC),
  CONSTRAINT `fk_CITY_has_EVENT_CITY1`
    FOREIGN KEY (`City_id`)
    REFERENCES `eventsDevDB`.city (`City_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CITY_has_EVENT_EVENT1`
    FOREIGN KEY (`Event_id`)
    REFERENCES `eventsDevDB`.event (`Event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eventsDevDB`.`BLOCKED_STREET`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eventsDevDB`.blocked_street ;

CREATE TABLE IF NOT EXISTS `eventsDevDB`.`BLOCKED_STREET` (
  `Blocked_street_id` INT NOT NULL,
  PRIMARY KEY (`Blocked_street_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eventsDevDB`.`EVENT_has_BLOCKED_STREET`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eventsDevDB`.event_has_blocked_street ;

CREATE TABLE IF NOT EXISTS `eventsDevDB`.`EVENT_has_BLOCKED_STREET` (
  `Event_has_blocked_street_id` INT NOT NULL,
  `Event_id` INT NOT NULL,
  `Blocked_street_id` INT NOT NULL,
  PRIMARY KEY (`Event_has_blocked_street_id`),
  INDEX `fk_EVENT_has_BLOCKED_STREET_BLOCKED_STREET1_idx` (`Blocked_street_id` ASC),
  INDEX `fk_EVENT_has_BLOCKED_STREET_EVENT1_idx` (`Event_id` ASC),
  CONSTRAINT `fk_EVENT_has_BLOCKED_STREET_EVENT1`
    FOREIGN KEY (`Event_id`)
    REFERENCES `eventsDevDB`.event (`Event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_EVENT_has_BLOCKED_STREET_BLOCKED_STREET1`
    FOREIGN KEY (`Blocked_street_id`)
    REFERENCES `eventsDevDB`.blocked_street (`Blocked_street_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eventsDevDB`.`SERVICE_TYPE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eventsDevDB`.service_type ;

CREATE TABLE IF NOT EXISTS `eventsDevDB`.`SERVICE_TYPE` (
  `Service_type_id` INT NOT NULL,
  `Service_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Service_type_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eventsDevDB`.`SERVICE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eventsDevDB`.service ;

CREATE TABLE IF NOT EXISTS `eventsDevDB`.`SERVICE` (
  `Service_id` INT NOT NULL,
  `Service_name` VARCHAR(45) NULL,
  `Web_page` VARCHAR(45) NULL,
  `Service_type_id` INT NOT NULL,
  PRIMARY KEY (`Service_id`),
  INDEX `fk_SERVICE_SERVICE_TYPE1_idx` (`Service_type_id` ASC),
  CONSTRAINT `fk_SERVICE_SERVICE_TYPE1`
    FOREIGN KEY (`Service_type_id`)
    REFERENCES `eventsDevDB`.service_type (`Service_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eventsDevDB`.`EVENT_has_SERVICE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eventsDevDB`.event_has_service ;

CREATE TABLE IF NOT EXISTS `eventsDevDB`.`EVENT_has_SERVICE` (
  `Event_has_service_id` INT NOT NULL,
  `Event_id` INT NOT NULL,
  `Service_id` INT NOT NULL,
  PRIMARY KEY (`Event_has_service_id`),
  INDEX `fk_EVENT_has_SERVICE_SERVICE1_idx` (`Service_id` ASC),
  INDEX `fk_EVENT_has_SERVICE_EVENT1_idx` (`Event_id` ASC),
  CONSTRAINT `fk_EVENT_has_SERVICE_EVENT1`
    FOREIGN KEY (`Event_id`)
    REFERENCES `eventsDevDB`.event (`Event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_EVENT_has_SERVICE_SERVICE1`
    FOREIGN KEY (`Service_id`)
    REFERENCES `eventsDevDB`.service (`Service_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eventsDevDB`.`USER_has_EVENT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `eventsDevDB`.user_has_event ;

CREATE TABLE IF NOT EXISTS `eventsDevDB`.`USER_has_EVENT` (
  `User_has_event_id` INT NOT NULL,
  `USER_User_id` INT NOT NULL,
  `EVENT_Event_id` INT NOT NULL,
  INDEX `fk_USER_has_EVENT_EVENT1_idx` (`EVENT_Event_id` ASC),
  INDEX `fk_USER_has_EVENT_USER1_idx` (`USER_User_id` ASC),
  PRIMARY KEY (`User_has_event_id`),
  CONSTRAINT `fk_USER_has_EVENT_USER1`
    FOREIGN KEY (`USER_User_id`)
    REFERENCES `eventsDevDB`.user (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USER_has_EVENT_EVENT1`
    FOREIGN KEY (`EVENT_Event_id`)
    REFERENCES `eventsDevDB`.event (`Event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
